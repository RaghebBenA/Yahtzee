{"version":3,"sources":["Die/die.js","Dice/Dice.js","RuleRow/RuleRow.js","Rules/Rules.js","scoreTable/scoreTable.js","Game/Game.js","App.js","index.js"],"names":["Die","locked","val","handleClick","idx","allLocked","rolling","classes","className","onClick","disabled","Dice","dice","map","d","key","RuleRow","score","doScore","name","description","undefined","Rule","params","Object","assign","this","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","cellSpacing","totalScore","getTotalScore","Game","useState","Math","ceil","random","setDice","fill","setLocked","roolsLeft","setRoolsLeft","setRolling","setScores","slice","every","x","setTimeout","i","rulename","ruleFn","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd1b410.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './die.scss'\r\n\r\nconst Die = ({ locked, val,handleClick,idx ,allLocked,rolling}) => {\r\n \r\n  const clickHandeler = () =>{\r\n    handleClick(idx)\r\n  }\r\n const numWords = [\"one\",\"two\",\"three\",\"four\",\"five\",\"six\"]\r\n let classes = `Die fa fa-dice-${numWords[val -1]} `\r\n if(locked) classes +=  \"Die-locked \"\r\n if(rolling && !locked) classes += \"Die-rolling\"\r\n  return (\r\n    <i\r\n      className={classes}\r\n      onClick={clickHandeler}\r\n      disabled={allLocked}\r\n    />\r\n   \r\n  );\r\n};\r\n\r\nexport default Die;\r\n","import React from \"react\";\r\nimport Die from \"../Die/die\";\r\nimport \"./dice.scss\";\r\n\r\nconst Dice = ({ locked, handleClick, dice, allLocked,rolling }) => {\r\n  return (\r\n    <div className=\"Dice\">\r\n      {dice.map((d, idx) => (\r\n        <Die\r\n          val={d}\r\n          locked={locked[idx]}\r\n          idx={idx}\r\n          key={idx}\r\n          handleClick={handleClick}\r\n          allLocked={allLocked}\r\n          rolling={rolling}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dice;\r\n","import React from \"react\";\r\nimport \"./RuleRow.scss\";\r\n\r\nconst RuleRow = ({ score, doScore, name,description }) => {\r\n  return (\r\n    <tr\r\n      onClick={score === undefined ? doScore : null}\r\n      className={`RuleRow RuleRow-${\r\n          score === undefined ? \"active\" : \"disabled\"\r\n      }`}\r\n    >\r\n      <td className=\"RuleRow-name\">{name}</td>\r\n      <td className=\"RuleRow-score\">{score !== undefined ? score : description}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RuleRow;\r\n","class Rule {\r\n  constructor(params) {\r\n    //put all props in params on instance\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  sum(dice) {\r\n    //sum of all dice\r\n    return dice.reduce((prev, curr) => prev + curr);\r\n  }\r\n  freq(dice) {\r\n    //frequencies of dice values\r\n    const freqs = new Map();\r\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\r\n    return Array.from(freqs.values());\r\n  }\r\n\r\n  count(dice, val) {\r\n    // times val appears in dice\r\n    return dice.filter((d) => d === val).length;\r\n  }\r\n}\r\n\r\n//return the sum of the dice with that val for example sum of all ones\r\nclass TotalOneNumber extends Rule {\r\n  evalRoll = (dice) => {\r\n    return this.val * this.count(dice, this.val);\r\n  };\r\n}\r\n\r\n//return sum all dice that given a required val of a die for example sum of all dice when there is a 3-of-kind\r\nclass SumDistro extends Rule {\r\n  evalRoll = (dice) => {\r\n    return this.freq(dice).some((c) => c >= this.count) ? this.sum(dice) : 0;\r\n  };\r\n}\r\n\r\nclass FullHouse extends Rule {\r\n  evalRoll = (dice) => {\r\n    const freqs = this.freq(dice);\r\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\r\n  };\r\n}\r\n\r\nclass SmallStraight extends Rule {\r\n  evalRoll = (dice) => {\r\n    const d = new Set(dice);\r\n    if ((d.has(2) && d.has(3) && d.has(4) && d.has(1)) || d.has(5)) {\r\n      return this.score;\r\n    }\r\n    if ((d.has(3) && d.has(4) && d.has(5) && d.has(2)) || d.has(6)) {\r\n      return this.score;\r\n    }\r\n    return 0;\r\n  };\r\n}\r\n\r\n//check if there is 5 diffrent dice & only one can be a 1 or 6\r\nclass LargeStraight extends Rule {\r\n  evalRoll = (dice) => {\r\n    const d = new Set(dice);\r\n\r\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\r\n  };\r\n}\r\n\r\n// check if the dice are same\r\nclass Yahtzee extends Rule {\r\n  evalRoll = (dice) => {\r\n    return this.freq(dice)[0] === 5 ? this.score : 0;\r\n  };\r\n}\r\n\r\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\r\nconst twos = new TotalOneNumber({ val: 2, description: \"2 point per 2\" });\r\nconst threes = new TotalOneNumber({ val: 3, description: \"3 point per 3\" });\r\nconst fours = new TotalOneNumber({ val: 4, description: \"4 point per 4\" });\r\nconst fives = new TotalOneNumber({ val: 5, description: \"5 point per 5\" });\r\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 point per 6\" });\r\n\r\nconst threeOfKind = new SumDistro({\r\n  count: 3,\r\n  description: \"Sum all dice if 3 are the same\"\r\n});\r\nconst fourOfKind = new SumDistro({\r\n  count: 4,\r\n  description: \"Sum all dice if 4 are the same\"\r\n});\r\n\r\nconst fullHouse = new FullHouse({\r\n  score: 25,\r\n  description: \"25 points for full house\"\r\n});\r\n\r\nconst smallStraight = new SmallStraight({\r\n  score: 30,\r\n  description: \"30 points for small straight\"\r\n});\r\nconst largeStraight = new LargeStraight({\r\n  score: 40,\r\n  description: \"40 points for large straight\"\r\n});\r\n\r\nconst yahtzee = new Yahtzee({\r\n  score: 50,\r\n  description: \"50 points for yahtzee\"\r\n});\r\n\r\n//some of all dice with at least 0 of a kind\r\nconst chance = new SumDistro({ count: 0, description: \"Sum of all dice\" });\r\n\r\nexport {\r\n  ones,\r\n  twos,\r\n  threes,\r\n  fours,\r\n  fives,\r\n  sixes,\r\n  threeOfKind,\r\n  fourOfKind,\r\n  fullHouse,\r\n  smallStraight,\r\n  largeStraight,\r\n  yahtzee,\r\n  chance\r\n};\r\n","import React from \"react\";\r\nimport RuleRow from \"../RuleRow/RuleRow\";\r\nimport {\r\n  ones,\r\n  twos,\r\n  threes,\r\n  fours,\r\n  fives,\r\n  sixes,\r\n  threeOfKind,\r\n  fourOfKind,\r\n  fullHouse,\r\n  smallStraight,\r\n  largeStraight,\r\n  yahtzee,\r\n  chance\r\n} from \"../Rules/Rules\";\r\nimport \"./scoreTable.scss\"\r\n\r\nconst ScoreTable = ({ scores, doScore }) => {\r\n   \r\n  const getTotalScore = () =>{\r\n     let totalScore = 0\r\n\r\n     for(let key in scores){\r\n       if(scores[key]) totalScore += scores[key]\r\n     }\r\n     return totalScore\r\n  }\r\n\r\n  return (\r\n    <div className=\"ScoreTable\">\r\n      <section className=\"ScoreTable-section\">\r\n        <h2>upper</h2>\r\n        <table cellSpacing=\"0\">\r\n          <tbody>\r\n            <RuleRow\r\n              name=\"Ones\"\r\n              score={scores.ones}\r\n              doScore={() => doScore(\"ones\", ones.evalRoll)}\r\n              description={ones.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Twos\"\r\n              score={scores.twos}\r\n              doScore={() => doScore(\"twos\", twos.evalRoll)}\r\n              description={twos.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Threes\"\r\n              score={scores.threes}\r\n              doScore={() => doScore(\"threes\", threes.evalRoll)}\r\n              description={threes.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Fours\"\r\n              score={scores.fours}\r\n              doScore={() => doScore(\"fours\", fours.evalRoll)}\r\n              description={fours.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Fives\"\r\n              score={scores.fives}\r\n              doScore={() => doScore(\"fives\", fives.evalRoll)}\r\n              description={fives.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Sixes\"\r\n              score={scores.sixes}\r\n              doScore={() => doScore(\"sixes\", sixes.evalRoll)}\r\n              description={sixes.description}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <section className=\"ScoreTable-section ScoreTable-section-lower\">\r\n        <h2>Lower</h2>\r\n        <table cellSpacing=\"0\">\r\n          <tbody>\r\n            <RuleRow\r\n              name=\"Three of Kind\"\r\n              score={scores.threeOfKind}\r\n              doScore={() => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\r\n              description={threeOfKind.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Four of Kind\"\r\n              score={scores.fourOfKind}\r\n              doScore={() => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\r\n              description={fourOfKind.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Full House\"\r\n              score={scores.fullHouse}\r\n              doScore={() => doScore(\"fullHouse\", fullHouse.evalRoll)}\r\n              description={fullHouse.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Small Straight\"\r\n              score={scores.smallStraight}\r\n              doScore={() => doScore(\"smallStraight\", smallStraight.evalRoll)}\r\n              description={smallStraight.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Large Straight\"\r\n              score={scores.largeStraight}\r\n              doScore={() => doScore(\"largeStraight\", largeStraight.evalRoll)}\r\n              description={largeStraight.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Yahtzee\"\r\n              score={scores.yahtzee}\r\n              doScore={() => doScore(\"yahtzee\", yahtzee.evalRoll)}\r\n              description={yahtzee.description}\r\n            />\r\n            <RuleRow\r\n              name=\"Chance\"\r\n              score={scores.chance}\r\n              doScore={() => doScore(\"chance\", chance.evalRoll)}\r\n              description={chance.description}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <h1>Total Score {getTotalScore()}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreTable;\r\n","import React, { useState } from \"react\";\r\nimport Dice from \"../Dice/Dice\";\r\nimport \"./Game.scss\";\r\nimport ScoreTable from \"../scoreTable/scoreTable\";\r\n\r\nconst NUM_DICE = 5;\r\nconst NUM_ROLLS = 3;\r\n\r\nconst Game = () => {\r\n  const [dice, setDice] = useState(\r\n    Array.from({ length: NUM_DICE }).map(() => Math.ceil(Math.random() * 6))\r\n  );\r\n  const [locked, setLocked] = useState(Array(NUM_DICE).fill(false));\r\n  const [roolsLeft, setRoolsLeft] = useState(NUM_ROLLS);\r\n  const [rolling, setRolling] = useState(false);\r\n  const [scores, setScores] = useState({\r\n    ones: undefined,\r\n    twos: undefined,\r\n    threes: undefined,\r\n    fours: undefined,\r\n    fives: undefined,\r\n    sixes: undefined,\r\n    threeOfKind: undefined,\r\n    fourOfKind: undefined,\r\n    fullHouse: undefined,\r\n    smallStraight: undefined,\r\n    largeStraight: undefined,\r\n    yahtzee: undefined,\r\n    chance: undefined\r\n  });\r\n\r\n  const roll = () => {\r\n    setDice((dice) =>\r\n      dice.map((d, i) => (locked[i] ? d : Math.ceil(Math.random() * 6)))\r\n    );\r\n    setLocked((locked) =>\r\n      roolsLeft > 1 ? locked : Array(NUM_DICE).fill(true)\r\n    );\r\n    setRoolsLeft((roolsLeft) => roolsLeft - 1);\r\n    setRolling(false);\r\n  };\r\n\r\n  const animateRolling = () => {\r\n    setRolling(true);\r\n    setTimeout(() => {\r\n      roll();\r\n    }, 1000);\r\n  };\r\n\r\n  const toggleLocked = (idx) => {\r\n    if (!rolling) {\r\n      setLocked((locked) => [\r\n        ...locked.slice(0, idx),\r\n        !locked[idx],\r\n        ...locked.slice(idx + 1)\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const doScore = (rulename, ruleFn) => {\r\n    setScores((scores) => ({ ...scores, [rulename]: ruleFn(dice) }));\r\n    setRoolsLeft(NUM_ROLLS);\r\n    setLocked(Array(NUM_DICE).fill(false));\r\n    setDice(\r\n      Array.from({ length: NUM_DICE }).map(() => Math.ceil(Math.random() * 6))\r\n    );\r\n  };\r\n\r\n  const displayRolling = () =>{\r\n    const message = [\r\n      \"0 Rolls Left\",\r\n      \"1 Roll Left\",\r\n      \"2 Rolls Left\",\r\n      \"Starting Round\"\r\n    ]\r\n    return  message[roolsLeft]\r\n  }\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <header className=\"Game-header\">\r\n        <h1 className=\"App-title\">Yahtzee</h1>\r\n        <section className=\"Game-Dice-section\">\r\n          <Dice\r\n            dice={dice}\r\n            locked={locked}\r\n            handleClick={toggleLocked}\r\n            allLocked={roolsLeft === 0}\r\n            rolling={rolling}\r\n          />\r\n          <div className=\"Game-button-wrapper\">\r\n            <button\r\n              className=\"Game-reroll\"\r\n              disabled={locked.every((x) => x) || rolling}\r\n              onClick={animateRolling}\r\n            >\r\n              {displayRolling()}\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </header>\r\n      <ScoreTable doScore={doScore} scores={scores} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport './App.css';\nimport Game from './Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}